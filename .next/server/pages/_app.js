/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/_app";
exports.ids = ["pages/_app"];
exports.modules = {

/***/ "./context/TwitterContext.js":
/*!***********************************!*\
  !*** ./context/TwitterContext.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"TwitterContext\": () => (/* binding */ TwitterContext),\n/* harmony export */   \"TwitterProvider\": () => (/* binding */ TwitterProvider)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/router */ \"next/router\");\n/* harmony import */ var next_router__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_router__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../lib/client */ \"./lib/client.js\");\n\n\n\n\nconst TwitterContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)();\nconst TwitterProvider = ({ children  })=>{\n    const [appStatus, setAppStatus] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [currentAccount, setCurrentAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [currentUser, setCurrentUser] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({});\n    const [tweets, setTweets] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const router = (0,next_router__WEBPACK_IMPORTED_MODULE_2__.useRouter)();\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        checkIfWalletIsConnected();\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!currentAccount && appStatus == \"connected\") return;\n        getCurrentUserDetails(currentAccount);\n        fetchTweets();\n    }, [\n        currentAccount,\n        appStatus\n    ]);\n    /**\r\n   * Checks if there is an active wallet connection\r\n   */ const checkIfWalletIsConnected = async ()=>{\n        if (!window.ethereum) return setAppStatus(\"noMetaMask\");\n        try {\n            const addressArray = await window.ethereum.request({\n                method: \"eth_accounts\"\n            });\n            if (addressArray.length > 0) {\n                setAppStatus(\"connected\");\n                setCurrentAccount(addressArray[0]);\n                createUserAccount(addressArray[0]);\n            } else {\n                router.push(\"/\");\n                setAppStatus(\"notConnected\");\n            }\n        } catch (err) {\n            router.push(\"/\");\n            setAppStatus(\"error\");\n        }\n    };\n    /**\r\n   * Initiates MetaMask wallet connection\r\n   */ const connectWallet = async ()=>{\n        if (!window.ethereum) return setAppStatus(\"noMetaMask\");\n        try {\n            setAppStatus(\"loading\");\n            const addressArray = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            if (addressArray.length > 0) {\n                setCurrentAccount(addressArray[0]);\n                createUserAccount(addressArray[0]);\n            } else {\n                router.push(\"/\");\n                setAppStatus(\"notConnected\");\n            }\n        } catch (err) {\n            setAppStatus(\"error\");\n        }\n    };\n    /**\r\n   * Creates an account in Sanity DB if the user does not already have one\r\n   * @param {String} userAddress Wallet address of the currently logged in user\r\n   */ const createUserAccount = async (userAddress = currentAccount)=>{\n        if (!window.ethereum) return setAppStatus(\"noMetaMask\");\n        try {\n            const userDoc = {\n                _type: \"users\",\n                _id: userAddress,\n                name: \"Unnamed\",\n                isProfileImageNft: false,\n                profileImage: \"https://about.twitter.com/content/dam/about-twitter/en/brand-toolkit/brand-download-img-1.jpg.twimg.1920.jpg\",\n                walletAddress: userAddress\n            };\n            await _lib_client__WEBPACK_IMPORTED_MODULE_3__.client.createIfNotExists(userDoc);\n            setAppStatus(\"connected\");\n        } catch (error) {\n            router.push(\"/\");\n            setAppStatus(\"error\");\n        }\n    };\n    /**\r\n   * Generates NFT profile picture URL or returns the image URL if it's not an NFT\r\n   * @param {String} imageUri If the user has minted a profile picture, an IPFS hash; if not then the URL of their profile picture\r\n   * @param {Boolean} isNft Indicates whether the user has minted a profile picture\r\n   * @returns A full URL to the profile picture\r\n   */ const getNftProfileImage = async (imageUri, isNft)=>{\n        if (isNft) {\n            return `https://gateway.pinata.cloud/ipfs/${imageUri}`;\n        } else if (!isNft) {\n            return imageUri;\n        }\n    };\n    /**\r\n   * Gets all the tweets stored in Sanity DB.\r\n   */ const fetchTweets = async ()=>{\n        const query = `\r\n      *[_type == \"tweets\"]{\r\n        \"author\": author->{name, walletAddress, profileImage, isProfileImageNft},\r\n        tweet,\r\n        timestamp\r\n      }|order(timestamp desc)\r\n    `;\n        // setTweets(await client.fetch(query))\n        const sanityResponse = await _lib_client__WEBPACK_IMPORTED_MODULE_3__.client.fetch(query);\n        setTweets([]);\n        /**\r\n     * Async await not available with for..of loops.\r\n     */ sanityResponse.forEach(async (item)=>{\n            const newItem = {\n                tweet: item.tweet,\n                timestamp: item.timestamp,\n                author: {\n                    name: item.author.name,\n                    walletAddress: item.author.walletAddress,\n                    profileImage: item.author.profileImage,\n                    isProfileImageNft: item.author.isProfileImageNft\n                }\n            };\n            setTweets((prevState)=>[\n                    ...prevState,\n                    newItem\n                ]);\n        /*\r\n      const profileImageUrl = await getNftProfileImage(\r\n        item.author.profileImage,\r\n        item.author.isProfileImageNft,\r\n      )\r\n\r\n      if (item.author.isProfileImageNft) {\r\n        const newItem = {\r\n          tweet: item.tweet,\r\n          timestamp: item.timestamp,\r\n          author: {\r\n            name: item.author.name,\r\n            walletAddress: item.author.walletAddress,\r\n            profileImage: profileImageUrl,\r\n            isProfileImageNft: item.author.isProfileImageNft,\r\n          },\r\n        }\r\n\r\n        setTweets(prevState => [...prevState, newItem])\r\n      } else {\r\n        setTweets(prevState => [...prevState, item])\r\n      }*/ });\n    };\n    /**\r\n   * Gets the current user details from Sanity DB.\r\n   * @param {String} userAccount Wallet address of the currently logged in user\r\n   * @returns null\r\n   */ const getCurrentUserDetails = async (userAccount = currentAccount)=>{\n        if (appStatus !== \"connected\") return;\n        const query = `\r\n      *[_type == \"users\" && _id == \"${userAccount}\"]{\r\n        \"tweets\": tweets[]->{timestamp, tweet}|order(timestamp desc),\r\n        name,\r\n        profileImage,\r\n        isProfileImageNft,\r\n        coverImage,\r\n        walletAddress\r\n      }\r\n    `;\n        const response1 = await _lib_client__WEBPACK_IMPORTED_MODULE_3__.client.fetch(query);\n        console.log(\"this is response\", response1);\n        setCurrentUser({\n            tweets: response1[0].tweets,\n            name: response1[0].name,\n            profileImage: response1[0].profileImage,\n            walletAddress: response1[0].walletAddress,\n            coverImage: response1[0].coverImage,\n            isProfileImageNft: response1[0].isProfileImageNft\n        });\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TwitterContext.Provider, {\n        value: {\n            appStatus,\n            currentAccount,\n            connectWallet,\n            tweets,\n            fetchTweets,\n            setAppStatus,\n            getNftProfileImage,\n            currentUser,\n            getCurrentUserDetails\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"D:\\\\blockchainApp\\\\social-media-blockchain\\\\context\\\\TwitterContext.js\",\n        lineNumber: 204,\n        columnNumber: 5\n    }, undefined);\n} /*import { createContext, useEffect, useState } from \"react\";\r\nimport { useRouter } from \"next/router\";\r\nimport { client } from \"../lib/client\";\r\n\r\nexport const TwitterContext = createContext();\r\n\r\nexport const TwitterProvider = ({ children }) => {\r\n  const [appStatus, setAppStatus] = useState(\"loading\");\r\n  const [currentAccount, setCurrentAccount] = useState(\"\");\r\n  const [tweets, setTweets] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const router = useRouter();\r\n  useEffect(() => {\r\n    checkIfWalletIsConnected();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!currentAccount || appStatus !== \"connected\") return;\r\n  }, [currentAccount, appStatus]);\r\n  const checkIfWalletIsConnected = async () => {\r\n    if (!window.ethereum) return setAppStatus(\"noMetaMask\");\r\n    try {\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_accounts\",\r\n      });\r\n      if (addressArray.length > 0) {\r\n        setAppStatus(\"connected\");\r\n        setCurrentAccount(addressArray[0]);\r\n        createUserAccount(addressArray[0]);\r\n      } else {\r\n        router.push(\"/\");\r\n        setAppStatus(\"notConnected\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  const connectToWallet = async () => {\r\n    if (!window.ethereum) return setAppStatus(\"noMetaMask\");\r\n    try {\r\n      setAppStatus(\"loading\");\r\n\r\n      const addressArray = await window.ethereum.request({\r\n        method: \"eth_requestAccounts\",\r\n      });\r\n\r\n      if (addressArray.length > 0) {\r\n        setAppStatus(\"connected\");\r\n        setCurrentAccount(addressArray[0]);\r\n        createUserAccount(addressArray[0]);\r\n      }\r\n    } catch (error) {\r\n      router.push(\"/\");\r\n      setAppStatus(\"notConnected\");\r\n    }\r\n  };\r\n\r\n  const createUserAccount = async (userAddress = currentAccount) => {\r\n    if (!window.ethereum) return setAppStatus(\"noMetaMask\");\r\n    try {\r\n      const userDoc = {\r\n        _type: \"users\",\r\n        _id: userAddress,\r\n        name: \"Unnamed\",\r\n        isProfileImageNft: false,\r\n        profileImage:\r\n          \"https://about.twitter.com/content/dam/about-twitter/en/brand-toolkit/brand-download-img-1.jpg.twimg.1920.jpg\",\r\n        walletAddress: userAddress,\r\n      };\r\n\r\n      await client.createIfNotExists(userDoc);\r\n\r\n      setAppStatus(\"connected\");\r\n    } catch (error) {\r\n      router.push(\"/\");\r\n      setAppStatus(\"error\");\r\n    }\r\n  };\r\n\r\n  const fetchTweets = async () => {\r\n    const query = `\r\n      *[_type == \"tweets\"]{\r\n        \"author\": author->{name, walletAddress, profileImage, isProfileImageNft},\r\n        tweet,\r\n        timestamp\r\n      }|order(timestamp desc)\r\n    `;\r\n\r\n    // setTweets(await client.fetch(query))\r\n\r\n    const sanityResponse = await client.fetch(query);\r\n\r\n    setTweets([]);\r\n\r\n    sanityResponse.forEach(async (item) => {\r\n      const newItem = {\r\n        tweet: item.tweet,\r\n        timestamp: item.timestamp,\r\n        author: {\r\n          name: item.author.name,\r\n          walletAddress: item.author.walletAddress,\r\n          profileImage: profileImageUrl,\r\n          isProfileImageNft: item.author.isProfileImageNft,\r\n        },\r\n      }\r\n    }); setTweets((prevState) => [...prevState, newItem]);\r\n  };\r\n\r\n  const getCurrentUserDetails = async (userAccount = currentAccount) => {\r\n    if (appStatus !== \"connected\") return;\r\n\r\n    const query = `\r\n      *[_type == \"users\" && _id == \"${userAccount}\"]{\r\n        \"tweets\": tweets[]->{timestamp, tweet}|order(timestamp desc),\r\n        name,\r\n        profileImage,\r\n        isProfileImageNft,\r\n        coverImage,\r\n        walletAddress\r\n      }\r\n    `;\r\n    const sanityResponse = await client.fetch(query);\r\n\r\n\r\n    setCurrentUser({\r\n      tweets: sanityResponse[0].tweets,\r\n      name: sanityResponse[0].name,\r\n      profileImage: sanityResponse[0].profileImage,\r\n      walletAddress: sanityResponse[0].walletAddress,\r\n      coverImage: sanityResponse[0].coverImage,\r\n      isProfileImageNft: sanityResponse[0].isProfileImageNft,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TwitterContext.Provider\r\n      value={{\r\n        appStatus,\r\n        currentAccount,\r\n        connectToWallet,\r\n        fetchTweets,\r\n        tweets,\r\n        currentUser,\r\n        getCurrentUserDetails,\r\n      }}\r\n    >\r\n      {children}\r\n    </TwitterContext.Provider>\r\n  );\r\n};\r\n*/ ;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./context/TwitterContext.js\n");

/***/ }),

/***/ "./lib/client.js":
/*!***********************!*\
  !*** ./lib/client.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"client\": () => (/* binding */ client)\n/* harmony export */ });\n/* harmony import */ var _sanity_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @sanity/client */ \"@sanity/client\");\n/* harmony import */ var _sanity_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_sanity_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst client = _sanity_client__WEBPACK_IMPORTED_MODULE_0___default()({\n    projectId: \"k624xanv\",\n    dataset: \"production\",\n    apiVersion: \"v1\",\n    token: \"sku76ZROwaaf64HGExG4fbAyk9mPBawaNx4BEoWfMiFwsGPVaZltdpEW9R2Ef2b9zBTCgTNvYTbczDAEalGoBG7WKPldtWs0ybuTuwZQfM4YctUWrVVoXeG9hQprqve8UmJAp3B9156dMB4NZfBnke0EaPlLdgL9AHi4uvsNin0tn5M7PAHS\",\n    useCdn: false\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9saWIvY2xpZW50LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUVsQyxNQUFNQyxTQUFTRCxxREFBWUEsQ0FBQztJQUNqQ0UsV0FBV0MsVUFBeUM7SUFDcERHLFNBQVM7SUFDVEMsWUFBWTtJQUNaQyxPQUFPTCxzTEFBb0M7SUFDM0NPLFFBQVEsS0FBSztBQUNmLEdBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9saWIvY2xpZW50LmpzP2U2OWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHNhbml0eUNsaWVudCBmcm9tICdAc2FuaXR5L2NsaWVudCdcclxuXHJcbmV4cG9ydCBjb25zdCBjbGllbnQgPSBzYW5pdHlDbGllbnQoe1xyXG4gIHByb2plY3RJZDogcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfU0FOSVRZX1BST0pFQ1RfSUQsXHJcbiAgZGF0YXNldDogJ3Byb2R1Y3Rpb24nLFxyXG4gIGFwaVZlcnNpb246ICd2MScsXHJcbiAgdG9rZW46IHByb2Nlc3MuZW52Lk5FWFRfUFVCTElDX1NBTklUWV9UT0tFTixcclxuICB1c2VDZG46IGZhbHNlLFxyXG59KSJdLCJuYW1lcyI6WyJzYW5pdHlDbGllbnQiLCJjbGllbnQiLCJwcm9qZWN0SWQiLCJwcm9jZXNzIiwiZW52IiwiTkVYVF9QVUJMSUNfU0FOSVRZX1BST0pFQ1RfSUQiLCJkYXRhc2V0IiwiYXBpVmVyc2lvbiIsInRva2VuIiwiTkVYVF9QVUJMSUNfU0FOSVRZX1RPS0VOIiwidXNlQ2RuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./lib/client.js\n");

/***/ }),

/***/ "./pages/_app.js":
/*!***********************!*\
  !*** ./pages/_app.js ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/globals.css */ \"./styles/globals.css\");\n/* harmony import */ var _styles_globals_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_globals_css__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_hexStyles_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../lib/hexStyles.css */ \"./lib/hexStyles.css\");\n/* harmony import */ var _lib_hexStyles_css__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_lib_hexStyles_css__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _context_TwitterContext__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../context/TwitterContext */ \"./context/TwitterContext.js\");\n\n\n\n\n//import type { AppProps } from 'next/app'\nfunction MyApp({ Component , pageProps  }) {\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_context_TwitterContext__WEBPACK_IMPORTED_MODULE_3__.TwitterProvider, {\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(Component, {\n            ...pageProps\n        }, void 0, false, {\n            fileName: \"D:\\\\blockchainApp\\\\social-media-blockchain\\\\pages\\\\_app.js\",\n            lineNumber: 8,\n            columnNumber: 5\n        }, this)\n    }, void 0, false, {\n        fileName: \"D:\\\\blockchainApp\\\\social-media-blockchain\\\\pages\\\\_app.js\",\n        lineNumber: 7,\n        columnNumber: 10\n    }, this);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (MyApp);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9wYWdlcy9fYXBwLmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQUE7QUFBK0I7QUFDRDtBQUM4QjtBQUM1RCwwQ0FBMEM7QUFFMUMsU0FBU0MsTUFBTSxFQUFFQyxVQUFTLEVBQUVDLFVBQVMsRUFBRSxFQUFFO0lBQ3ZDLHFCQUFPLDhEQUFDSCxvRUFBZUE7a0JBQ3JCLDRFQUFDRTtZQUFXLEdBQUdDLFNBQVM7Ozs7Ozs7Ozs7O0FBRTVCO0FBRUEsaUVBQWVGLEtBQUtBLEVBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWdlcy9fYXBwLmpzP2UwYWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICcuLi9zdHlsZXMvZ2xvYmFscy5jc3MnO1xuaW1wb3J0ICcuLi9saWIvaGV4U3R5bGVzLmNzcyc7XG5pbXBvcnQgeyBUd2l0dGVyUHJvdmlkZXIgfSBmcm9tICcuLi9jb250ZXh0L1R3aXR0ZXJDb250ZXh0Jztcbi8vaW1wb3J0IHR5cGUgeyBBcHBQcm9wcyB9IGZyb20gJ25leHQvYXBwJ1xuXG5mdW5jdGlvbiBNeUFwcCh7IENvbXBvbmVudCwgcGFnZVByb3BzIH0pIHtcbiAgcmV0dXJuIDxUd2l0dGVyUHJvdmlkZXI+XG4gICAgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPlxuICA8L1R3aXR0ZXJQcm92aWRlcj5cbn0gXG5cbmV4cG9ydCBkZWZhdWx0IE15QXBwXG4iXSwibmFtZXMiOlsiVHdpdHRlclByb3ZpZGVyIiwiTXlBcHAiLCJDb21wb25lbnQiLCJwYWdlUHJvcHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./pages/_app.js\n");

/***/ }),

/***/ "./lib/hexStyles.css":
/*!***************************!*\
  !*** ./lib/hexStyles.css ***!
  \***************************/
/***/ (() => {



/***/ }),

/***/ "./styles/globals.css":
/*!****************************!*\
  !*** ./styles/globals.css ***!
  \****************************/
/***/ (() => {



/***/ }),

/***/ "@sanity/client":
/*!*********************************!*\
  !*** external "@sanity/client" ***!
  \*********************************/
/***/ ((module) => {

"use strict";
module.exports = require("@sanity/client");

/***/ }),

/***/ "next/router":
/*!******************************!*\
  !*** external "next/router" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/router");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("react");

/***/ }),

/***/ "react/jsx-dev-runtime":
/*!****************************************!*\
  !*** external "react/jsx-dev-runtime" ***!
  \****************************************/
/***/ ((module) => {

"use strict";
module.exports = require("react/jsx-dev-runtime");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("./pages/_app.js"));
module.exports = __webpack_exports__;

})();